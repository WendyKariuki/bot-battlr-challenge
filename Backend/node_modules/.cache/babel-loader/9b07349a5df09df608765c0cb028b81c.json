{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/wkariuki/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/YourBotArmy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n\nfunction YourBotArmy({\n  bots,\n  release\n}) {\n  _s();\n\n  const [botArmy, setBotArmy] = useState([]);\n\n  const releaseBot = botId => {\n    // Filter out the bot with the specified ID\n    const updatedBotArmy = botArmy.filter(bot => bot.id !== botId);\n    setBotArmy(updatedBotArmy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment inverted olive bot-army\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui five column grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row bot-army-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Bot Army\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), bots.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          onClick: () => releaseBot(bot.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"oh no!\",\n            className: \"ui small circular image bordered\",\n            src: bot.avatar_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), \" \", bot.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Class:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), \" \", bot.bot_class]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Health:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), \" \", bot.health]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Damage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), \" \", bot.damage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Armor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), \" \", bot.armor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Catchphrase:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), \" \", bot.catchphrase]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, bot.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(YourBotArmy, \"pMDcgrPJ6uy9NbvXzWzrWnrpyZU=\");\n\n_c = YourBotArmy;\nexport default YourBotArmy;\n\nvar _c;\n\n$RefreshReg$(_c, \"YourBotArmy\");","map":{"version":3,"sources":["/home/wkariuki/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/YourBotArmy.js"],"names":["React","useState","useEffect","YourBotArmy","bots","release","botArmy","setBotArmy","releaseBot","botId","updatedBotArmy","filter","bot","id","map","avatar_url","name","bot_class","health","damage","armor","catchphrase"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAArB,EAAwC;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,UAAU,GAAIC,KAAD,IAAW;AAC5B;AACA,UAAMC,cAAc,GAAGJ,OAAO,CAACK,MAAR,CAAgBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,KAAnC,CAAvB;AACAF,IAAAA,UAAU,CAACG,cAAD,CAAV;AAA4B,GAH9B;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGN,IAAI,CAACU,GAAL,CAAUF,GAAD,iBACR;AAAK,UAAA,SAAS,EAAC,QAAf;AAAoC,UAAA,OAAO,EAAE,MAAMJ,UAAU,CAACI,GAAG,CAACC,EAAL,CAA7D;AAAA,kCACE;AACE,YAAA,GAAG,EAAC,QADN;AAEE,YAAA,SAAS,EAAC,kCAFZ;AAGE,YAAA,GAAG,EAAED,GAAG,CAACG;AAHX;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,OAC0BH,GAAG,CAACI,IAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eASE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,OAC2BJ,GAAG,CAACK,SAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAYE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,OAC4BL,GAAG,CAACM,MADhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAeE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,OAC4BN,GAAG,CAACO,MADhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eAkBE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,OAC2BP,GAAG,CAACQ,KAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAqBE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,OACiCR,GAAG,CAACS,WADrC;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA,WAA6BT,GAAG,CAACC,EAAjC;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GA7CQV,W;;KAAAA,W;AA+CT,eAAeA,WAAf","sourcesContent":["import React,{useState, useEffect} from \"react\";\n\nfunction YourBotArmy({ bots, release }) {\n  const [botArmy, setBotArmy] = useState([]);\n\n  const releaseBot = (botId) => {\n    // Filter out the bot with the specified ID\n    const updatedBotArmy = botArmy.filter((bot) => bot.id !== botId);\n    setBotArmy(updatedBotArmy);}\n\n \n  return (\n    <div className=\"ui segment inverted olive bot-army\">\n      <div className=\"ui five column grid\">\n        <div className=\"row bot-army-row\">\n          <h2>Your Bot Army</h2>\n          {bots.map((bot) => (\n            <div className=\"column\" key={bot.id}onClick={() => releaseBot(bot.id)}>\n              <img\n                alt=\"oh no!\"\n                className=\"ui small circular image bordered\"\n                src={bot.avatar_url}\n              />\n              <div>\n                <strong>Name:</strong> {bot.name}\n              </div>\n              <div>\n                <strong>Class:</strong> {bot.bot_class}\n              </div>\n              <div>\n                <strong>Health:</strong> {bot.health}\n              </div>\n              <div>\n                <strong>Damage:</strong> {bot.damage}\n              </div>\n              <div>\n                <strong>Armor:</strong> {bot.armor}\n              </div>\n              <div>\n                <strong>Catchphrase:</strong> {bot.catchphrase}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default YourBotArmy;\n"]},"metadata":{},"sourceType":"module"}