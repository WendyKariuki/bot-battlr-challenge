{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/wkariuki/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport BotsPage from \"./BotsPage\";\nimport BotSpecs from \"./BotSpecs\";\n\nfunction App() {\n  _s();\n\n  const [bots, setBots] = useState([]);\n  const [botArmy, setBotArmy] = useState([]); // Function to handle adding a bot to the army\n\n  const addToArmy = bot => {\n    console.log(bot, \"peter\");\n\n    if (!botArmy.some(armyBot => armyBot.id === bot.id)) {\n      setBotArmy([...botArmy, bot]);\n    }\n  }; // Function to handle removing a bot from the army\n\n\n  const removeFromArmy = botId => {\n    const updatedBotArmy = botArmy.filter(bot => bot.id !== botId);\n    setBotArmy(updatedBotArmy);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\").then(response => response.json()).then(data => setBots(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(BotsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/bot/:id\",\n      element: /*#__PURE__*/_jsxDEV(BotSpecs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"d+K5VIAavQRbiGkfY1a5I9Cs7oE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/wkariuki/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/App.js"],"names":["React","Routes","Route","BotsPage","BotSpecs","App","bots","setBots","useState","botArmy","setBotArmy","addToArmy","bot","console","log","some","armyBot","id","removeFromArmy","botId","updatedBotArmy","filter","useEffect","fetch","then","response","json","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAO,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,EAAD,CAAtC,CAFa,CAIb;;AACA,QAAMG,SAAS,GAAIC,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,OAAjB;;AACA,QAAI,CAACH,OAAO,CAACM,IAAR,CAAcC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeL,GAAG,CAACK,EAA7C,CAAL,EAAuD;AACrDP,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaG,GAAb,CAAD,CAAV;AACD;AACF,GALD,CALa,CAYb;;;AACA,QAAMM,cAAc,GAAIC,KAAD,IAAW;AAChC,UAAMC,cAAc,GAAGX,OAAO,CAACY,MAAR,CAAgBT,GAAD,IAASA,GAAG,CAACK,EAAJ,KAAWE,KAAnC,CAAvB;AACAT,IAAAA,UAAU,CAACU,cAAD,CAAV;AACD,GAHD;;AAKAE,EAAAA,SAAS,CAAE,MAAM;AACfC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIpB,OAAO,CAACoB,IAAD,CAFrB;AAGD,GAJQ,EAIP,EAJO,CAAT;AAMA,sBAEI,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAQD;;GAhCQtB,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport BotsPage from \"./BotsPage\";\nimport BotSpecs from \"./BotSpecs\";\n\nfunction App() {\n  const  [bots, setBots] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n\n  // Function to handle adding a bot to the army\n  const addToArmy = (bot) => {\n    console.log(bot, \"peter\");\n    if (!botArmy.some((armyBot) => armyBot.id === bot.id)) {\n      setBotArmy([...botArmy, bot]);\n    }\n  };\n\n  // Function to handle removing a bot from the army\n  const removeFromArmy = (botId) => {\n    const updatedBotArmy = botArmy.filter((bot) => bot.id !== botId);\n    setBotArmy(updatedBotArmy);\n  };\n\n  useEffect (() => {\n    fetch(\"http://localhost:8002/bots\")\n    .then(response => response.json())\n    .then(data => setBots(data));\n  },[]);\n\n  return (\n   \n      <Routes>\n        <Route path=\"/\" element={<BotsPage />} />\n        <Route path=\"/bot/:id\" element={<BotSpecs />} />\n      </Routes>\n  \n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}