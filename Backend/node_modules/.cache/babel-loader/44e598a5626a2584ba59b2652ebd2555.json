{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/wkariuki/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotCard.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst botTypeClasses = {\n  Assault: \"icon military\",\n  Defender: \"icon shield\",\n  Support: \"icon plus circle\",\n  Medic: \"icon ambulance\",\n  Witch: \"icon magic\",\n  Captain: \"icon star\"\n};\n\nfunction BotCard({\n  bot,\n  addToArmy,\n  removeFromArmy\n}) {\n  const handleClick = () => {\n    addToArmy(bot);\n  };\n\n  const handleRemove = () => {\n    // Remove the bot from the army in the frontend\n    removeFromArmy(bot.id); // Send a request to the backend to remove the bot\n\n    fetch(`http://localhost:8002/bots/${bot.id}`, {\n      method: \"DELETE\"\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to delete bot from backend\");\n      } // Bot successfully deleted from backend\n\n    }).catch(error => {\n      console.error(\"Error deleting bot from backend:\", error); // Revert the change in the frontend if deletion from backend fails\n\n      addToArmy(bot);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui column\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/bot/${bot.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui card\",\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"oh no!\",\n            src: bot.avatar_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: [bot.name, /*#__PURE__*/_jsxDEV(\"i\", {\n              className: botTypeClasses[bot.bot_class]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meta text-wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: bot.catchphrase\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"extra content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon heartbeat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), bot.health]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon lightning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), bot.damage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon shield\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), bot.armor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ui center aligned segment basic\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"ui mini red button\",\n                onClick: handleRemove,\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, bot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_c = BotCard;\nexport default BotCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotCard\");","map":{"version":3,"sources":["/home/wkariuki/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotCard.js"],"names":["React","Link","botTypeClasses","Assault","Defender","Support","Medic","Witch","Captain","BotCard","bot","addToArmy","removeFromArmy","handleClick","handleRemove","id","fetch","method","then","response","ok","Error","catch","error","console","avatar_url","name","bot_class","catchphrase","health","damage","armor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\"; \n\nconst botTypeClasses = {\n  Assault: \"icon military\",\n  Defender: \"icon shield\",\n  Support: \"icon plus circle\",\n  Medic: \"icon ambulance\",\n  Witch: \"icon magic\",\n  Captain: \"icon star\",\n};\n\nfunction BotCard({ bot, addToArmy, removeFromArmy }) {\n  const handleClick = () => {\n    addToArmy(bot);\n  };\n\n  const handleRemove = () => {\n    // Remove the bot from the army in the frontend\n    removeFromArmy(bot.id);\n  \n    // Send a request to the backend to remove the bot\n    fetch(`http://localhost:8002/bots/${bot.id}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Failed to delete bot from backend\");\n        }\n        // Bot successfully deleted from backend\n      })\n      .catch((error) => {\n        console.error(\"Error deleting bot from backend:\", error);\n        // Revert the change in the frontend if deletion from backend fails\n        addToArmy(bot);\n      });}\n\n  return (\n    <div className=\"ui column\">\n      <Link to={`/bot/${bot.id}`}>\n        <div className=\"ui card\" key={bot.id} onClick={handleClick}>\n          <div className=\"image\">\n            <img alt=\"oh no!\" src={bot.avatar_url} />\n          </div>\n          <div className=\"content\">\n            <div className=\"header\">\n              {bot.name}\n              <i className={botTypeClasses[bot.bot_class]} />\n            </div>\n            <div className=\"meta text-wrap\">\n              <small>{bot.catchphrase}</small>\n            </div>\n          </div>\n          <div className=\"extra content\">\n            <span>\n              <i className=\"icon heartbeat\" />\n              {bot.health}\n            </span>\n            <span>\n              <i className=\"icon lightning\" />\n              {bot.damage}\n            </span>\n            <span>\n              <i className=\"icon shield\" />\n              {bot.armor}\n            </span>\n            <span>\n              <div className=\"ui center aligned segment basic\">\n                <button className=\"ui mini red button\" onClick={handleRemove}>\n                  x\n                </button>\n              </div>\n            </span>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nexport default BotCard;\n"]},"metadata":{},"sourceType":"module"}