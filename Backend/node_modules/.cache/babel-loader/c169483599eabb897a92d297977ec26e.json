{"ast":null,"code":"import _toConsumableArray from\"/home/wkariuki/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/wkariuki/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import YourBotArmy from\"./YourBotArmy\";import BotCollection from\"./BotCollection\";function BotsPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),bots=_useState2[0],setBots=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),botArmy=_useState4[0],setBotArmy=_useState4[1];// Function to handle adding a bot to the army\nvar addToArmy=function addToArmy(bot){if(!botArmy.some(function(armyBot){return armyBot.id===bot.id;})){setBotArmy([].concat(_toConsumableArray(botArmy),[bot]));}};useEffect(function(){fetch(\"http://localhost:8002/bots\").then(function(response){return response.json();}).then(function(data){return setBots(data);});},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(YourBotArmy,{bots:botArmy}),/*#__PURE__*/_jsx(BotCollection,{bots:bots,addToArmy:addToArmy})]});}export default BotsPage;","map":{"version":3,"sources":["/home/wkariuki/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js"],"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotsPage","bots","setBots","botArmy","setBotArmy","addToArmy","bot","some","armyBot","id","fetch","then","response","json","data"],"mappings":"4dAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,QAASC,CAAAA,QAAT,EAAoB,eACOJ,QAAQ,CAAC,EAAD,CADf,wCACVK,IADU,eACJC,OADI,8BAEYN,QAAQ,CAAC,EAAD,CAFpB,yCAEXO,OAFW,eAEFC,UAFE,eAIlB;AACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,GAAD,CAAS,CACzB,GAAI,CAACH,OAAO,CAACI,IAAR,CAAa,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,EAAR,GAAeH,GAAG,CAACG,EAAhC,EAAb,CAAL,CAAuD,CACrDL,UAAU,8BAAKD,OAAL,GAAcG,GAAd,GAAV,CACD,CACF,CAJD,CAMAT,SAAS,CAAE,UAAM,CACfa,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAG,IAAI,QAAIZ,CAAAA,OAAO,CAACY,IAAD,CAAX,EAFV,EAGD,CAJQ,CAIP,EAJO,CAAT,CAMA,mBACE,oCACE,KAAC,WAAD,EAAa,IAAI,CAAIX,OAArB,EADF,cAEE,KAAC,aAAD,EAAe,IAAI,CAAIF,IAAvB,CAA6B,SAAS,CAAII,SAA1C,EAFF,GADF,CAMD,CAED,cAAeL,CAAAA,QAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  const  [bots, setBots] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n\n  // Function to handle adding a bot to the army\n  const addToArmy = (bot) => {\n    if (!botArmy.some((armyBot) => armyBot.id === bot.id)) {\n      setBotArmy([...botArmy, bot]);\n    }\n  };\n\n  useEffect (() => {\n    fetch(\"http://localhost:8002/bots\")\n    .then(response => response.json())\n    .then(data => setBots(data));\n  },[]);\n\n  return (\n    <div>\n      <YourBotArmy bots = {botArmy}/>\n      <BotCollection bots = {bots} addToArmy = {addToArmy}/>\n    </div>\n  )\n}\n\nexport default BotsPage;\n"]},"metadata":{},"sourceType":"module"}