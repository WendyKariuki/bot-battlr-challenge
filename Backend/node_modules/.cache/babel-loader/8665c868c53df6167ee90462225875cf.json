{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/wkariuki/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js\",\n    _s = $RefreshSig$();\n\n// BotsPage.js\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport BotSpecs from \"./BotSpecs\";\n\nfunction BotsPage() {\n  _s();\n\n  const [bots, setBots] = useState([]);\n  const [botArmy, setBotArmy] = useState([]); // Function to handle adding a bot to the army\n\n  const addToArmy = bot => {\n    if (!botArmy.some(armyBot => armyBot.id === bot.id)) {\n      setBotArmy([...botArmy, bot]);\n    }\n  }; // Function to handle removing a bot from the army\n\n\n  const removeFromArmy = botId => {\n    const updatedBotArmy = botArmy.filter(bot => bot.id !== botId);\n    setBotArmy(updatedBotArmy);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\").then(response => response.json()).then(data => setBots(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: botArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      addToArmy: addToArmy,\n      removeFromArmy: removeFromArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotSpecs, {\n      addToArmy: addToArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotsPage, \"d+K5VIAavQRbiGkfY1a5I9Cs7oE=\");\n\n_c = BotsPage;\nexport default BotsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"sources":["/home/wkariuki/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js"],"names":["React","useState","useEffect","useNavigate","YourBotArmy","BotCollection","BotSpecs","BotsPage","bots","setBots","botArmy","setBotArmy","addToArmy","bot","some","armyBot","id","removeFromArmy","botId","updatedBotArmy","filter","fetch","then","response","json","data"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC,CAFkB,CAIlB;;AACA,QAAMW,SAAS,GAAIC,GAAD,IAAS;AACzB,QAAI,CAACH,OAAO,CAACI,IAAR,CAAcC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeH,GAAG,CAACG,EAA7C,CAAL,EAAuD;AACrDL,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaG,GAAb,CAAD,CAAV;AACD;AACF,GAJD,CALkB,CAWlB;;;AACA,QAAMI,cAAc,GAAIC,KAAD,IAAW;AAChC,UAAMC,cAAc,GAAGT,OAAO,CAACU,MAAR,CAAgBP,GAAD,IAASA,GAAG,CAACG,EAAJ,KAAWE,KAAnC,CAAvB;AACAP,IAAAA,UAAU,CAACQ,cAAD,CAAV;AACD,GAHD;;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAUhB,OAAO,CAACgB,IAAD,CAFzB;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEf;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AACE,MAAA,IAAI,EAAEF,IADR;AAEE,MAAA,SAAS,EAAEI,SAFb;AAGE,MAAA,cAAc,EAAEK;AAHlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEL;AAArB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAlCQL,Q;;KAAAA,Q;AAoCT,eAAeA,QAAf","sourcesContent":["// BotsPage.js\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport BotSpecs from \"./BotSpecs\";\n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n\n  // Function to handle adding a bot to the army\n  const addToArmy = (bot) => {\n    if (!botArmy.some((armyBot) => armyBot.id === bot.id)) {\n      setBotArmy([...botArmy, bot]);\n    }\n  };\n\n  // Function to handle removing a bot from the army\n  const removeFromArmy = (botId) => {\n    const updatedBotArmy = botArmy.filter((bot) => bot.id !== botId);\n    setBotArmy(updatedBotArmy);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\")\n      .then((response) => response.json())\n      .then((data) => setBots(data));\n  }, []);\n\n  return (\n    <div>\n      <YourBotArmy bots={botArmy} />\n      <BotCollection\n        bots={bots}\n        addToArmy={addToArmy}\n        removeFromArmy={removeFromArmy}\n      />\n      <BotSpecs addToArmy={addToArmy} />\n    </div>\n  );\n}\n\nexport default BotsPage;\n"]},"metadata":{},"sourceType":"module"}