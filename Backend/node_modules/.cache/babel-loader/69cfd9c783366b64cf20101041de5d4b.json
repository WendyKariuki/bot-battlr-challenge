{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/wkariuki/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/App.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import { Routes, Route } from \"react-router-dom\";\n// import BotsPage from \"./BotsPage\";\n// import BotSpecs from \"./BotSpecs\";\n// function App() {\n//   const [botArmy, setBotArmy] = useState([]);\n//   // Function to handle adding a bot to the army\n//   const addToArmy = (bot) => {\n//     if (!botArmy.some((armyBot) => armyBot.id === bot.id)) {\n//       setBotArmy([...botArmy, bot]);\n//     }\n//   };\n//   return (\n//     <Routes>\n//       <Route path=\"/\" element={<BotsPage />} />\n//       <Route path=\"/bot/:id\" element={<BotSpecs addToArmy={addToArmy} />} />\n//     </Routes>\n//   );\n// }\n// export default App;\nfunction App() {\n  _s();\n\n  const [botArmy, setBotArmy] = useState([]); // Function to handle adding a bot to the army\n\n  const addToArmy = bot => {\n    if (!botArmy.some(armyBot => armyBot.id === bot.id)) {\n      setBotArmy([...botArmy, bot]);\n    }\n  }; // Function to handle removing a bot from the army\n\n\n  const removeFromArmy = botId => {\n    const updatedBotArmy = botArmy.filter(bot => bot.id !== botId);\n    setBotArmy(updatedBotArmy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(BotsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/bot/:id\",\n      element: /*#__PURE__*/_jsxDEV(BotCollection, {\n        removeFromArmy: removeFromArmy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n} // export default App;\n\n\n_s(App, \"pMDcgrPJ6uy9NbvXzWzrWnrpyZU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/wkariuki/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/App.js"],"names":["App","botArmy","setBotArmy","useState","addToArmy","bot","some","armyBot","id","removeFromArmy","botId","updatedBotArmy","filter"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,EAAD,CAAtC,CADa,CAGb;;AACA,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACzB,QAAI,CAACJ,OAAO,CAACK,IAAR,CAAcC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeH,GAAG,CAACG,EAA7C,CAAL,EAAuD;AACrDN,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaI,GAAb,CAAD,CAAV;AACD;AACF,GAJD,CAJa,CAUb;;;AACA,QAAMI,cAAc,GAAIC,KAAD,IAAW;AAChC,UAAMC,cAAc,GAAGV,OAAO,CAACW,MAAR,CAAgBP,GAAD,IAASA,GAAG,CAACG,EAAJ,KAAWE,KAAnC,CAAvB;AACAR,IAAAA,UAAU,CAACS,cAAD,CAAV;AACD,GAHD;;AAKA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,eAAE,QAAC,aAAD;AAAe,QAAA,cAAc,EAAEF;AAA/B;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,C,CAED;;;GA5BST,G;;KAAAA,G","sourcesContent":["// import React, { useState } from \"react\";\n// import { Routes, Route } from \"react-router-dom\";\n// import BotsPage from \"./BotsPage\";\n// import BotSpecs from \"./BotSpecs\";\n\n// function App() {\n//   const [botArmy, setBotArmy] = useState([]);\n\n//   // Function to handle adding a bot to the army\n//   const addToArmy = (bot) => {\n//     if (!botArmy.some((armyBot) => armyBot.id === bot.id)) {\n//       setBotArmy([...botArmy, bot]);\n//     }\n//   };\n\n//   return (\n//     <Routes>\n//       <Route path=\"/\" element={<BotsPage />} />\n//       <Route path=\"/bot/:id\" element={<BotSpecs addToArmy={addToArmy} />} />\n//     </Routes>\n//   );\n// }\n\n// export default App;\n\nfunction App() {\n  const [botArmy, setBotArmy] = useState([]);\n\n  // Function to handle adding a bot to the army\n  const addToArmy = (bot) => {\n    if (!botArmy.some((armyBot) => armyBot.id === bot.id)) {\n      setBotArmy([...botArmy, bot]);\n    }\n  };\n\n  // Function to handle removing a bot from the army\n  const removeFromArmy = (botId) => {\n    const updatedBotArmy = botArmy.filter((bot) => bot.id !== botId);\n    setBotArmy(updatedBotArmy);\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<BotsPage />} />\n      {/* Ensure that removeFromArmy is passed down to BotCollection */}\n      <Route\n        path=\"/bot/:id\"\n        element={<BotCollection removeFromArmy={removeFromArmy} />}\n      />\n    </Routes>\n  );\n}\n\n// export default App;"]},"metadata":{},"sourceType":"module"}